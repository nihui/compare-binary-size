name: "Check code-format workflow and manage comment"

on:
  workflow_run:
    # 监听 code-format.yml workflow 执行完成事件
    workflows: [compare-binary-size]
    types: [completed]

jobs:
  pr-context:
    name: 'Acquire PR Context'
    runs-on: ubuntu-24.04
    outputs:
      PR_HEADSHA: ${{ steps.set-pr-context.outputs.head-sha }}
      PR_NUMBER:  ${{ steps.set-pr-context.outputs.number   }}
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    steps:
    - name: 'Get PR context'
      id: set-pr-context
      env:
        GH_TOKEN: ${{ github.token }}
        PR_TARGET_REPO: ${{ github.repository }}
        PR_BRANCH: |-
          ${{
            (github.event.workflow_run.head_repository.owner.login != github.event.workflow_run.repository.owner.login)
              && format('{0}:{1}', github.event.workflow_run.head_repository.owner.login, github.event.workflow_run.head_branch)
              || github.event.workflow_run.head_branch
          }}
      run: |
        gh pr view --repo "${PR_TARGET_REPO}" "${PR_BRANCH}" \
          --json 'number,headRefOid' \
          --jq '"number=\(.number)\nhead-sha=\(.headRefOid)"' \
          >> $GITHUB_OUTPUT

  remove-comment-if-success:
    # 若 code-format 检查通过则移除之前发布的失败提示
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [pr-context]
    env:
      PR_HEADSHA: ${{ needs.pr-context.outputs.PR_HEADSHA }}
      PR_NUMBER:  ${{ needs.pr-context.outputs.PR_NUMBER  }}
    steps:
      - name: Remove existing "format check failed" comment
        uses: actions/github-script@v5
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: ${{ env.PR_NUMBER }},
            });

            // 查找之前的失败提示
            const targetComment = comments.find(comment =>
              comment.body.includes("code-format 检查失败，请修复后再提交。")
            );

            if (targetComment) {
              await github.rest.issues.deleteComment({
                owner,
                repo,
                comment_id: targetComment.id,
              });
              console.log("Removed existing code-format failure comment.");
            } else {
              console.log("No existing format failure comment to remove.");
            }

  post-comment-if-failure:
    # 若 code-format 检查失败则创建新的失败提示，前提是当前 PR 中还没有此提示
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    needs: [pr-context]
    env:
      PR_HEADSHA: ${{ needs.pr-context.outputs.PR_HEADSHA }}
      PR_NUMBER:  ${{ needs.pr-context.outputs.PR_NUMBER  }}
    steps:
      - name: Post comment on failed code-format if not existing
        uses: actions/github-script@v5
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: ${{ env.PR_NUMBER }},
            });

            // 如果已经有相关提示，就不再发布
            const existingComment = comments.find(comment =>
              comment.body.includes("code-format 检查失败，请修复后再提交。")
            );

            if (existingComment) {
              console.log("A code-format failure comment already exists.");
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: ${{ env.PR_NUMBER }},
                body: "code-format 检查失败，请修复后再提交。",
              });
              console.log("Created code-format failure comment.");
            }
